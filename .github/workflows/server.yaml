name: deploy/server-cloud-module 

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '23'

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY}}

      - name: Get GitHub Runner IP
        id: get_ip
        run: echo "GITHUB_RUNNER_IP=$(curl -s https://api.ipify.org)" >> $GITHUB_ENV

      - name: Allow GitHub Runner IP on EC2 SG
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{secrets.SECURITY_GROUP_ID}} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ env.GITHUB_RUNNER_IP }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Deploy to docker
        run: |
            ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
              cd /home/ec2-user/server-cloud-Module
              git pull origin main
            
              echo " Stopping old container"
              docker stop server-cloud-module || true
              docker rm server-cloud-module || true
              docker rmi abubakarmeigag/server-cloud-module:latest || true

              echo "Rebuilding Docker image"
              docker build --no-cache -t abubakarmeigag/server-cloud-module:latest .

              echo "Starting new container"
              docker run -d -p 6006:6006 --name server-cloud-module abubakarmeigag/server-cloud-module:latest
            EOF


      - name: Remove GitHub Runner IP from EC2 SG
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ env.GITHUB_RUNNER_IP }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}






          # - name: Deploy to EC2
          # run: |
          #     ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          #       cd /home/ec2-user/server-cloud-Module/server
          #       git pull origin main
          #       npm install
          #       pm2 restart index.js || pm2 start index.js
          #     EOF